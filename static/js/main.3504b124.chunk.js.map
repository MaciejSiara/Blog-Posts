{"version":3,"sources":["axios.js","components/Post.jsx","containers/FullPost.jsx","containers/Posts.jsx","containers/NewPost.jsx","containers/Blog.jsx","App.js","index.js"],"names":["instance","axios","create","baseURL","defaults","headers","common","Post","props","className","onClick","clicked","title","author","FullPost","useState","loadedPost","setLoadedPost","useEffect","match","params","id","get","then","res","console","log","post","style","textAlign","data","body","delete","Posts","serverPosts","setServerPosts","error","updatedPosts","slice","map","catch","posts","key","history","push","pathname","path","url","exact","component","NewPost","setTitle","content","setContent","setAuthor","type","value","onChange","e","target","rows","Blog","to","activeClassName","activeStyle","color","textDecoration","hash","search","App","interceptors","request","use","Promise","reject","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3504b124.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n   baseURL: \"https://jsonplaceholder.typicode.com\",\r\n});\r\n\r\ninstance.defaults.headers.common[\"Authorization\"] = \"AUTH TOKEN FROM INSTANCE\";\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\n\r\nexport default function Post(props) {\r\n   let post = <p>Please select a Post!!!</p>;\r\n   post = (\r\n      <article className=\"Post\" onClick={props.clicked}>\r\n         <h1 className=\"Title\">{props.title}</h1>\r\n         <div className=\"Info\">\r\n            <div className=\"Author\">{props.author}</div>\r\n         </div>\r\n      </article>\r\n   );\r\n\r\n   return post;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function FullPost(props) {\r\n   const [loadedPost, setLoadedPost] = useState(null);\r\n\r\n   useEffect(() => {\r\n      if (props.match.params.id) {\r\n         if (!loadedPost || (loadedPost && loadedPost !== props.match.params.id)) {\r\n            axios.get(`/posts/${props.match.params.id}`).then(res => {\r\n               console.log(res);\r\n\r\n               setLoadedPost(res);\r\n            });\r\n         }\r\n      }\r\n   }, [props.match.params.id]);\r\n\r\n   const deletePostHandler = () => {\r\n      axios.delete(`/posts/${props.id}`).then(res => {\r\n      });\r\n   };\r\n\r\n   let post = <p style={{ textAlign: \"center\" }}>Please select a Post!!!</p>;\r\n\r\n   if (props.match.params.id) {\r\n      post = <p style={{ textAlign: \"center\" }}>Loading...!</p>;\r\n   }\r\n   if (loadedPost) {\r\n      post = (\r\n         <div className=\"fullPost\">\r\n            <h1>{loadedPost.data.title}</h1>\r\n            <p>{loadedPost.data.body}</p>\r\n            <div className=\"edit\">\r\n               <button className=\"delete\" onClick={deletePostHandler}>\r\n                  Delete\r\n               </button>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n\r\n   return post;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport Post from \"../components/Post\";\r\nimport FullPost from \"./FullPost\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default function Posts(props) {\r\n   const [serverPosts, setServerPosts] = useState([]);\r\n   const [selectedPostId, setSelectedPostId] = useState([]);\r\n   const [error, setError] = useState(false);\r\n\r\n   useEffect(() => {\r\n      axios\r\n         .get(\"/posts\")\r\n         .then(res => {\r\n            const posts = res.data.slice(0, 4);\r\n            const updatedPosts = posts.map(post => {\r\n               return {\r\n                  ...post,\r\n                  author: \"Maciej\",\r\n               };\r\n            });\r\n            setServerPosts(updatedPosts);\r\n         })\r\n         .catch(error => {\r\n            console.error(error);\r\n            // setError(true);\r\n         });\r\n   }, []);\r\n   \r\n\r\n   const postSelectedHandler = id => {\r\n      //   setSelectedPostId(id);\r\n      props.history.push({ pathname: \"/posts/\" + id });\r\n   };\r\n\r\n   let posts = <p style={{ textAlign: \"center\" }}>Something went wrong</p>;\r\n   if (!error) {\r\n      posts = serverPosts.map(post => {\r\n         return (\r\n            // <Link to={\"/posts\" + post.id} key={post.id}>\r\n            <Post\r\n               key={post.id}\r\n               title={post.title}\r\n               author={post.author}\r\n               clicked={() => postSelectedHandler(post.id)}\r\n            />\r\n            // </Link>\r\n         );\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <section className=\"Posts\">{posts}</section>\r\n         <Route path={props.match.url + '/:id'} exact component={FullPost} />\r\n      </div>\r\n   );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function NewPost(props) {\r\n   const [title, setTitle] = useState([]);\r\n   const [content, setContent] = useState([]);\r\n   const [author, setAuthor] = useState(\"Maciej\");\r\n\r\n   useEffect(() => {\r\n      console.log(props);\r\n   });\r\n\r\n   const postDataHandler = () => {\r\n      const post = {\r\n         title: title,\r\n         body: content,\r\n         author: author,\r\n      };\r\n\r\n      axios.post(\"/posts\", post).then(res => {\r\n         console.log(res);\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"newPost\">\r\n         <h1>Add a Post</h1>\r\n         <label>Title</label>\r\n         <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={e => {\r\n               setTitle(e.target.value);\r\n            }}\r\n         />\r\n         <label>Content</label>\r\n         <textarea\r\n            rows=\"4\"\r\n            value={content}\r\n            onChange={e => {\r\n               setContent(e.target.value);\r\n            }}\r\n         />\r\n         <label>Author</label>\r\n         <select value={author} onChange={e => setAuthor(e.target.value)}>\r\n            <option value=\"Jan\">Jan</option>\r\n            <option value=\"Maciej\">Maciej</option>\r\n         </select>\r\n         <button onClick={postDataHandler}>Add Post</button>\r\n      </div>\r\n   );\r\n}\r\n","import React from \"react\";\r\nimport { Route, NavLink, Switch } from \"react-router-dom\";\r\nimport Posts from \"./Posts\";\r\nimport NewPost from \"./NewPost\";\r\n\r\nexport default function Blog(props) {\r\n   return (\r\n      <div className=\"Blog\">\r\n         <header>\r\n            <nav>\r\n               <ul>\r\n                  <li>\r\n                     <NavLink\r\n                        to=\"/posts\"\r\n                        exact\r\n                        activeClassName=\"my-active\"\r\n                        activeStyle={{\r\n                           color: \"#fa923f\",\r\n                           textDecoration: \"underline\",\r\n                        }}\r\n                     >\r\n                        Posts\r\n                     </NavLink>\r\n                  </li>\r\n                  <li>\r\n                     <NavLink\r\n                        to={{\r\n                           pathname: \"/new-post\",\r\n                           hash: \"#submit\",\r\n                           search: \"?quick-submit=true\",\r\n                        }}\r\n                     >\r\n                        New Post\r\n                     </NavLink>\r\n                  </li>\r\n               </ul>\r\n            </nav>\r\n         </header>\r\n         {/* <Switch> */}\r\n         <Route path=\"/new-post\" component={NewPost} />\r\n         <Route path=\"/posts\" component={Posts} />\r\n         {/* </Switch> */}\r\n      </div>\r\n   );\r\n}\r\n","import React from \"react\";\nimport Blog from \"./containers/Blog\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./styles/App.scss\";\n\nfunction App() {\n   return (\n      <BrowserRouter>\n         <div className=\"App\">\n            <Blog />\n         </div>\n      </BrowserRouter>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com\";\naxios.defaults.headers.common[\"Authorization\"] = \"AUTH TOKEN\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\naxios.interceptors.request.use(\n   request => {\n      console.log(request);\n      return request;\n   },\n   error => {\n      console.log(error);\n      return Promise.reject(error);\n   }\n);\n\naxios.interceptors.response.use(\n   response => {\n      console.log(response);\n      return response;\n   },\n   error => {\n      console.log(error);\n      return Promise.reject(error);\n   }\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}